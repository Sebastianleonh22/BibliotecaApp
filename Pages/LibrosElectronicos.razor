@page "/libros-electronicos"
@using BibliotecaApp.Data
@inject BibliotecaService BibliotecaService

<h3>Lista de Libros Electrónicos</h3>

<button @onclick="MostrarFormulario">Agregar Libro Electrónico</button>

@if (mostrarFormulario)
{
    <EditForm Model="libroElectronicoActual" OnValidSubmit="GuardarLibroElectronico">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Título:</label>
            <InputText @bind-Value="libroElectronicoActual.Titulo" />
        </div>
        <div>
            <label>Autor:</label>
            <InputText @bind-Value="libroElectronicoActual.Autor" />
        </div>
        <div>
            <label>Género:</label>
            <InputText @bind-Value="libroElectronicoActual.Genero" />
        </div>
        <div>
            <label>Año de Publicación:</label>
            <InputNumber @bind-Value="libroElectronicoActual.AñoPublicacion" />
        </div>
        <div>
            <label>Formato:</label>
            <InputText @bind-Value="libroElectronicoActual.Formato" />
        </div>
        <div>
            <label>Tamaño del Archivo (MB):</label>
            <InputNumber @bind-Value="libroElectronicoActual.TamañoArchivo" />
        </div>
        <button type="submit">Guardar</button>
        <button type="button" @onclick="OcultarFormulario">Cancelar</button>
    </EditForm>
}

<ul>
    @foreach (var libroElectronico in librosElectronicos)
    {
        <li>
            @libroElectronico.Titulo - @libroElectronico.Autor - @libroElectronico.Genero - @libroElectronico.AñoPublicacion - Formato: @libroElectronico.Formato - Tamaño: @libroElectronico.TamañoArchivo MB
            <button @onclick="() => EditarLibroElectronico(libroElectronico)">Editar</button>
        </li>
    }
</ul>

@code {
    private List<LibroElectronico> librosElectronicos;
    private LibroElectronico libroElectronicoActual = new LibroElectronico();
    private bool mostrarFormulario = false;

    protected override async Task OnInitializedAsync()
    {
        librosElectronicos = await BibliotecaService.GetLibrosElectronicosAsync();
    }

    private void MostrarFormulario()
    {
        libroElectronicoActual = new LibroElectronico();  // Nuevo libro electrónico
        mostrarFormulario = true;
    }

    private void OcultarFormulario()
    {
        mostrarFormulario = false;
        libroElectronicoActual = new LibroElectronico();
    }

    private async Task GuardarLibroElectronico()
    {
        if (libroElectronicoActual.Id == 0)
        {
            libroElectronicoActual.Id = librosElectronicos.Any() ? librosElectronicos.Max(le => le.Id) + 1 : 1;
            await BibliotecaService.AddLibroElectronicoAsync(libroElectronicoActual);
        }
        else
        {
            await BibliotecaService.UpdateLibroElectronicoAsync(libroElectronicoActual);
        }
        librosElectronicos = await BibliotecaService.GetLibrosElectronicosAsync();
        OcultarFormulario();
    }

    private void EditarLibroElectronico(LibroElectronico libroElectronico)
    {
        libroElectronicoActual = libroElectronico;
        mostrarFormulario = true;
    }
}
